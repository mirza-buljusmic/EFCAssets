@model IEnumerable<EFCAssets.Models.Asset>


@{
    ViewData["Title"] = "Index | Assets";
}


<span>active </span><span style="" class="display-4 text-info">Assets</span>



<p>
    <a asp-action="Create" class="text-info">Create New</a>

</p>
<!--<input type="text" id="searchName" onkeyup="searchName()" placeholder="Search name...">-->
<div class="table-responsive">
    <table 
           class="table kitchensink" 
           id="table" 
           data-toggle="table" 
           data-search="true" 
           data-show-columns="true" 
           data-show-toggle="true"
           data-virtual-scroll="false" 
           data-height="700"
           data-minimum-count-columns="3"
           data-show-button-text="true"
           data-icons-prefix="icon"
           data-icons="icons"
           data-pagination="true"
           data-page-list="[10, 25, 50, 100, all]"
           data-show-footer="false"
           data-search-align="left"
           data-buttons-align="right"
           data-buttons-class="info"
           data-page-class="info"
           data-buttons-prefix="btn-sm btn"
           table-borderless="true"
           table-bordered="false"
           data-sortable="true">
           
        <thead>
            <tr>
                <th data-sortable="true">
                    @Html.DisplayNameFor(model => model.AssetName)
                </th>
                <th data-visible="false" data-sortable="true">
                        @Html.DisplayNameFor(model => model.AssetPurchaseDate)
                    </th>
                <th data-sortable="true">
                    @Html.DisplayNameFor(model => model.AssetExpirationDate)
                </th>
                <th data-visible="false" data-sortable="true">
                        @Html.DisplayNameFor(model => model.AssetWarningDate)
                    </th>
                <th>
                    @Html.DisplayNameFor(model => model.AssetPrice)
                </th>
                <th data-visible="false">
                    @Html.DisplayNameFor(model => model.AssetValue)
                </th>
                <th data-visible="false">Depr/year</th>
                <th data-sortable="true">
                    @Html.DisplayNameFor(model => model.Office)
                </th>
                <th data-sortable="true">
                    @Html.DisplayNameFor(model => model.Category)
                </th>
                @*<th data-visible="false">
                        @Html.DisplayNameFor(model => model.AssetActive)
                    </th>*@
                <th data-selectable="false"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                //Show only active assets
                if (item.AssetActive)
                {
                    int daysLeft = (item.AssetExpirationDate - DateTime.Today).Days;
                    <tr class="@(daysLeft < 1 ? "text-danger" : "")">
                        <td>
                            @Html.DisplayFor(modelItem => item.AssetName)
                        </td>
                        <td>
                                @item.AssetPurchaseDate.ToShortDateString()
                            </td>


                        <td>
                            @item.AssetExpirationDate.ToShortDateString()
                        </td>
                        <td>
                                @item.AssetWarningDate.ToShortDateString()
                            </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AssetPrice)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AssetValue)
                        </td>
                        <td>@decimal.Round((item.AssetPrice * 0.9m) / (item.AssetExpirationDate.Year - item.AssetPurchaseDate.Year), 3)</td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Office.OfficeName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Category.CategoryName)
                        </td>
                        @*<td>
                                @Html.DisplayFor(modelItem => item.AssetActive)
                            </td>*@
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.AssetId" class="text-info">Edit |</a>
                            <a asp-action="Details" asp-route-id="@item.AssetId" class="text-info">Details |</a>
                            <a asp-action="Delete" asp-route-id="@item.AssetId" class="text-info">Deactivate</a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>
<script>
    window.icons = {
        refresh: 'ion-md-refresh',
        columns: 'ion-md-menu',
        toggle: 'ion-md-expand'
    }

    $(document).ready(function () {
        $('#table').DataTable();
    });

</script>